{:packages #:bpiel{:mnist-test-10k-labels-file-v1 {:name "bpiel/mnist-test-10k-labels-file-v1", :asset {:records 10000, :parts [{:name "mnist/t10k-labels-idx1-ubyte", :sha1hash "a6d52cc628797e845885543326e9f10abb8a6f89", :instr [[:http :get "https://s3.amazonaws.com/guildsman/mnist/t10k-labels-idx1-ubyte.gz"] :gunzip]}]}, :src {:name "bpiel/mnist-test-10k-labels-file-v1", :asset {:records 10000, :parts [{:name "mnist/t10k-labels-idx1-ubyte", :sha1hash "a6d52cc628797e845885543326e9f10abb8a6f89", :instr [[:http :get "https://s3.amazonaws.com/guildsman/mnist/t10k-labels-idx1-ubyte.gz"] :gunzip]}]}}}, :mnist-train-60k-labels-v1 {:name "bpiel/mnist-train-60k-labels-v1", :deps [:bpiel/mnist-train-60k-labels-file-v1 :bpiel/parse-mnist-labels-fn-v1], :plan {:macro :map-ds, :id nil, :inputs [{:macro :fixed-length-record-ds, :id nil, :inputs [{:macro :pkg-asset-as-files, :id nil, :pkg :bpiel/mnist-train-60k-labels-file-v1, :gm/pkg-deps [:bpiel/mnist-train-60k-labels-file-v1], :inputs [], :ctrl-inputs nil, :scope [], :var-scope nil} {:op :Const, :id nil, :attrs {:value 8, :dtype :int64}, :scope []} {:op :Const, :id nil, :attrs {:value 1, :dtype :int64}, :scope []} {:op :Const, :id nil, :attrs {:value 0, :dtype :int64}, :scope []} {:op :Const, :id nil, :attrs {:value 1, :dtype :int64}, :scope []}], :size 60000, :ctrl-inputs nil, :scope [], :var-scope nil}], :f {:args [{:name x, :type :string, :shape []}], :func "parse-mnist-labels-fn", :body [{:macro :cast-tf, :id :cast-tf, :inputs [{:op :Unpack, :inputs [{:op :DecodeRaw, :inputs [x], :ctrl-inputs nil, :id nil, :attrs {:out_type :uint8}, :scope []}], :ctrl-inputs nil, :id nil, :attrs {:num 1, :axis 0}, :scope []}], :dest-type :int32, :ctrl-inputs nil, :scope [], :var-scope nil}], :returns [{:type :int32, :shape []}]}, :fields [:labels], :ctrl-inputs nil, :scope [], :var-scope nil}, :src {:name "bpiel/mnist-train-60k-labels-v1", :deps [:bpiel/mnist-train-60k-labels-file-v1 :bpiel/parse-mnist-labels-fn-v1], :plan (->> (c/asset-as-files :bpiel/mnist-train-60k-labels-file-v1) (c/fixed-length-record-ds {:size 60000, :header-bytes (o/c 8 g/dt-long), :record-bytes (o/c 1 g/dt-long), :footer-bytes (o/c 0 g/dt-long), :buffer-bytes (o/c 1 g/dt-long)}) (c/map-ds {:fields [:labels]} :bpiel/parse-mnist-labels-fn-v1))}}, :mnist-test-10k-features-file-v1 {:name "bpiel/mnist-test-10k-features-file-v1", :asset {:records 10000, :parts [{:name "mnist/t10k-images-idx3-ubyte", :sha1hash "65e11ec1fd220343092a5070b58418b5c2644e26", :instr [[:http :get "https://s3.amazonaws.com/guildsman/mnist/t10k-images-idx3-ubyte.gz"] :gunzip]}]}, :src {:name "bpiel/mnist-test-10k-features-file-v1", :asset {:records 10000, :parts [{:name "mnist/t10k-images-idx3-ubyte", :sha1hash "65e11ec1fd220343092a5070b58418b5c2644e26", :instr [[:http :get "https://s3.amazonaws.com/guildsman/mnist/t10k-images-idx3-ubyte.gz"] :gunzip]}]}}}, :mnist-train-60k-features-v1 {:name "bpiel/mnist-train-60k-features", :deps [:bpiel/mnist-train-60k-features-file-v1 :bpiel/parse-mnist-features-fn-v1], :plan {:macro :map-ds, :id nil, :inputs [{:macro :fixed-length-record-ds, :id nil, :inputs [{:macro :pkg-asset-as-files, :id nil, :pkg :bpiel/mnist-train-60k-features-file-v1, :gm/pkg-deps [:bpiel/mnist-train-60k-features-file-v1], :inputs [], :ctrl-inputs nil, :scope [], :var-scope nil} {:op :Const, :id nil, :attrs {:value 16, :dtype :int64}, :scope []} {:op :Const, :id nil, :attrs {:value 784, :dtype :int64}, :scope []} {:op :Const, :id nil, :attrs {:value 0, :dtype :int64}, :scope []} {:op :Const, :id nil, :attrs {:value 784, :dtype :int64}, :scope []}], :size 60000, :ctrl-inputs nil, :scope [], :var-scope nil}], :f {:args [{:name x, :type :string, :shape []}], :func "parse-mnist-features-fn", :body [{:op :Div, :inputs [{:macro :cast-tf, :id :cast-tf, :inputs [{:op :DecodeRaw, :inputs [x], :ctrl-inputs nil, :id nil, :attrs {:out_type :uint8}, :scope []}], :dest-type :float, :ctrl-inputs nil, :scope [], :var-scope nil} 255.0], :ctrl-inputs nil, :id nil, :attrs {}, :scope []}], :returns [{:type :float, :shape [784]}]}, :fields [:features], :ctrl-inputs nil, :scope [], :var-scope nil}, :src {:name "bpiel/mnist-train-60k-features", :deps [:bpiel/mnist-train-60k-features-file-v1 :bpiel/parse-mnist-features-fn-v1], :plan (->> (c/asset-as-files :bpiel/mnist-train-60k-features-file-v1) (c/fixed-length-record-ds {:size 60000, :header-bytes (o/c 16 g/dt-long), :record-bytes (o/c 784 g/dt-long), :footer-bytes (o/c 0 g/dt-long), :buffer-bytes (o/c 784 g/dt-long)}) (c/map-ds {:fields [:features]} :bpiel/parse-mnist-features-fn-v1))}}, :mnist-train-60k-features-file-v1 {:name "bpiel/mnist-train-60k-features-file-v1", :asset {:records 60000, :parts [{:name "mnist/train-images-idx3-ubyte", :sha1hash "c3557c10f29b266e19b3eeee1553c85e0ef4a8ea", :instr [[:http :get "https://s3.amazonaws.com/guildsman/mnist/train-images-idx3-ubyte.gz"] :gunzip]}]}, :src {:name "bpiel/mnist-train-60k-features-file-v1", :asset {:records 60000, :parts [{:name "mnist/train-images-idx3-ubyte", :sha1hash "c3557c10f29b266e19b3eeee1553c85e0ef4a8ea", :instr [[:http :get "https://s3.amazonaws.com/guildsman/mnist/train-images-idx3-ubyte.gz"] :gunzip]}]}}}, :parse-mnist-features-fn-v1 {:name "bpiel/parse-mnist-features-fn", :function {:args [{:name x, :type :string, :shape []}], :func "parse-mnist-features-fn", :body [{:op :Div, :inputs [{:macro :cast-tf, :id :cast-tf, :inputs [{:op :DecodeRaw, :inputs [x], :ctrl-inputs nil, :id nil, :attrs {:out_type :uint8}, :scope []}], :dest-type :float, :ctrl-inputs nil, :scope [], :var-scope nil} 255.0], :ctrl-inputs nil, :id nil, :attrs {}, :scope []}], :returns [{:type :float, :shape [784]}]}, :src {:name "bpiel/parse-mnist-features-fn", :function (g/fn-tf parse-mnist-features-fn [g/dt-float [784]] [x g/dt-string []] [(o/div (->> x (o/decode-raw {:out_type g/dt-uint}) (c/cast-tf g/dt-float)) 255.0)])}}, :parse-mnist-labels-fn-v1 {:name "bpiel/parse-mnist-labels-fn", :function {:args [{:name x, :type :string, :shape []}], :func "parse-mnist-labels-fn", :body [{:macro :cast-tf, :id :cast-tf, :inputs [{:op :Unpack, :inputs [{:op :DecodeRaw, :inputs [x], :ctrl-inputs nil, :id nil, :attrs {:out_type :uint8}, :scope []}], :ctrl-inputs nil, :id nil, :attrs {:num 1, :axis 0}, :scope []}], :dest-type :int32, :ctrl-inputs nil, :scope [], :var-scope nil}], :returns [{:type :int32, :shape []}]}, :src {:name "bpiel/parse-mnist-labels-fn", :function (g/fn-tf parse-mnist-labels-fn [g/dt-int []] [x g/dt-string []] [(->> x (o/decode-raw {:out_type g/dt-uint}) (o/unpack {:num 1, :axis 0}) (c/cast-tf g/dt-int))])}}, :mnist-train-60k-labels-file-v1 {:name "bpiel/mnist-train-60k-labels-file-v1", :asset {:records 60000, :parts [{:name "mnist/train-labels-idx1-ubyte", :sha1hash "adbf52269f5d842899f287c269e2883e40b4f6e2", :instr [[:http :get "https://s3.amazonaws.com/guildsman/mnist/train-labels-idx1-ubyte.gz"] :gunzip]}]}, :src {:name "bpiel/mnist-train-60k-labels-file-v1", :asset {:records 60000, :parts [{:name "mnist/train-labels-idx1-ubyte", :sha1hash "adbf52269f5d842899f287c269e2883e40b4f6e2", :instr [[:http :get "https://s3.amazonaws.com/guildsman/mnist/train-labels-idx1-ubyte.gz"] :gunzip]}]}}}, :mnist-test-10k-labels-v1 {:name "bpiel/mnist-test-10k-labels-v1", :deps [:bpiel/mnist-test-10k-labels-file-v1 :bpiel/parse-mnist-labels-fn-v1], :plan {:macro :map-ds, :id nil, :inputs [{:macro :fixed-length-record-ds, :id nil, :inputs [{:macro :pkg-asset-as-files, :id nil, :pkg :bpiel/mnist-test-10k-labels-file-v1, :gm/pkg-deps [:bpiel/mnist-test-10k-labels-file-v1], :inputs [], :ctrl-inputs nil, :scope [], :var-scope nil} {:op :Const, :id nil, :attrs {:value 8, :dtype :int64}, :scope []} {:op :Const, :id nil, :attrs {:value 1, :dtype :int64}, :scope []} {:op :Const, :id nil, :attrs {:value 0, :dtype :int64}, :scope []} {:op :Const, :id nil, :attrs {:value 1, :dtype :int64}, :scope []}], :size 10000, :ctrl-inputs nil, :scope [], :var-scope nil}], :f {:args [{:name x, :type :string, :shape []}], :func "parse-mnist-labels-fn", :body [{:macro :cast-tf, :id :cast-tf, :inputs [{:op :Unpack, :inputs [{:op :DecodeRaw, :inputs [x], :ctrl-inputs nil, :id nil, :attrs {:out_type :uint8}, :scope []}], :ctrl-inputs nil, :id nil, :attrs {:num 1, :axis 0}, :scope []}], :dest-type :int32, :ctrl-inputs nil, :scope [], :var-scope nil}], :returns [{:type :int32, :shape []}]}, :fields [:labels], :ctrl-inputs nil, :scope [], :var-scope nil}, :src {:name "bpiel/mnist-test-10k-labels-v1", :deps [:bpiel/mnist-test-10k-labels-file-v1 :bpiel/parse-mnist-labels-fn-v1], :plan (->> (c/asset-as-files :bpiel/mnist-test-10k-labels-file-v1) (c/fixed-length-record-ds {:size 10000, :header-bytes (o/c 8 g/dt-long), :record-bytes (o/c 1 g/dt-long), :footer-bytes (o/c 0 g/dt-long), :buffer-bytes (o/c 1 g/dt-long)}) (c/map-ds {:fields [:labels]} :bpiel/parse-mnist-labels-fn-v1))}}, :mnist-test-10k-features-v1 {:name "bpiel/mnist-test-10k-features-v1", :deps [:bpiel/mnist-test-10k-features-file-v1 :bpiel/parse-mnist-features-fn-v1], :plan {:macro :map-ds, :id nil, :inputs [{:macro :fixed-length-record-ds, :id nil, :inputs [{:macro :pkg-asset-as-files, :id nil, :pkg :bpiel/mnist-test-10k-features-file-v1, :gm/pkg-deps [:bpiel/mnist-test-10k-features-file-v1], :inputs [], :ctrl-inputs nil, :scope [], :var-scope nil} {:op :Const, :id nil, :attrs {:value 16, :dtype :int64}, :scope []} {:op :Const, :id nil, :attrs {:value 784, :dtype :int64}, :scope []} {:op :Const, :id nil, :attrs {:value 0, :dtype :int64}, :scope []} {:op :Const, :id nil, :attrs {:value 784, :dtype :int64}, :scope []}], :size 10000, :ctrl-inputs nil, :scope [], :var-scope nil}], :f {:args [{:name x, :type :string, :shape []}], :func "parse-mnist-features-fn", :body [{:op :Div, :inputs [{:macro :cast-tf, :id :cast-tf, :inputs [{:op :DecodeRaw, :inputs [x], :ctrl-inputs nil, :id nil, :attrs {:out_type :uint8}, :scope []}], :dest-type :float, :ctrl-inputs nil, :scope [], :var-scope nil} 255.0], :ctrl-inputs nil, :id nil, :attrs {}, :scope []}], :returns [{:type :float, :shape [784]}]}, :fields [:features], :ctrl-inputs nil, :scope [], :var-scope nil}, :src {:name "bpiel/mnist-test-10k-features-v1", :deps [:bpiel/mnist-test-10k-features-file-v1 :bpiel/parse-mnist-features-fn-v1], :plan (->> (c/asset-as-files :bpiel/mnist-test-10k-features-file-v1) (c/fixed-length-record-ds {:size 10000, :header-bytes (o/c 16 g/dt-long), :record-bytes (o/c 784 g/dt-long), :footer-bytes (o/c 0 g/dt-long), :buffer-bytes (o/c 784 g/dt-long)}) (c/map-ds {:fields [:features]} :bpiel/parse-mnist-features-fn-v1))}}}}